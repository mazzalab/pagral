# os: windows
# image: Visual Studio 2019

environment:
  APPVEYOR_RDP_PASSWORD: AgattaPowel1979#
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    # CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.8"
      PYTHON_ARCH: "64"

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"
  - "pip install wheel setuptools Cython"

build: off

build_script:
  # Build the Cython extension
  - cmd: ECHO test text here!
  - cmd: python setup.py build_ext --inplace

test_script:
  # Run the project tests and store results in .xml log
  #  - ps: |
  #      # this produces nosetests.xml which is uploaded on_finish
  #      &$env:PYTHON\python setup.py nosetests --with-xunit
  #      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

after_test:
  # If tests are successful, create binary packages for the project.
  - "python setup.py bdist_wheel"
  # - "python setup.py bdist_wininst"
  # - "python setup.py bdist_msi"
  # - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # Upload test results to AppVeyor
  #  - ps: |
  #    # this uploads nosetests.xml produced in test_script step
  #    $wc = New-Object 'System.Net.WebClient'
  #    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\nosetests.xml))