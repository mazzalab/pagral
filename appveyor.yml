# os: windows

# version format
version: 0.1.{build}

branches:
  only:
    - master

only_commits:
  message: /\[build\]/

image:
  - Visual Studio 2019
#  - Ubuntu
#  - macOS

environment:
  PYTHON_VERSION: 3.7
  WINKITS: "C:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86"

  # global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    # CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    # - MINICONDA: "C:\\Miniconda37"
    #  PYTHON_VERSION: "3.7.4"
    #  PYTHON_ARCH: "32"
    - MINICONDA: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "3.7.4"
      PYTHON_ARCH: "64"

init:
  -  cmd: ECHO %PYTHON_VERSION% %MINICONDA%
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - cmd: set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%WINKITS%;%PATH%
  - cmd: activate.bat
  - cmd: set PYTHONUNBUFFERED=1

  - cmd: conda config --set always_yes yes --set changeps1 no
  - cmd: conda update -q conda
  # - cmd: conda info -a
  - cmd: conda config --set show_channel_urls true
  - cmd: conda config --add channels conda-forge
  - cmd: conda config --add channels anaconda
  - cmd: conda install -c conda-forge setuptools wheel conda-build anaconda-client conda-verify cython numpy=1.19.1 --yes --quiet
  # - cmd: conda install -c anaconda numpy=1.19.1 --yes --quiet

build: off

build_script:
  # Build the Cython extension
  - cmd: ECHO build_script here!
  # - cmd: python setup.py build_ext --inplace

test_script:
  - cmd: ECHO tests here!
  # Run the project tests and store results in .xml log
  #  - ps: |
  #      # this produces nosetests.xml which is uploaded on_finish
  #      &$env:PYTHON\python setup.py nosetests --with-xunit
  #      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

after_test:
  # If tests are successful, create binary packages for the project.
  - cmd: python setup.py bdist_wheel -d pypi_dist clean --all
  - ps: "ls pypi_dist"
  - cmd: conda build --quiet -c conda-forge conda-recipe --output-folder conda_dist
  - ps: "ls conda_dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: conda_dist\win-32\*.tar.bz2
  - path: pypi_dist\*.whl

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

#on_finish:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # Upload test results to AppVeyor
  #  - ps: |
  #    # this uploads nosetests.xml produced in test_script step
  #    $wc = New-Object 'System.Net.WebClient'
  #    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\nosetests.xml))